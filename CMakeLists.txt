cmake_minimum_required(VERSION 2.6)
project(rtql8Manipulability)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin/")

set(RTQL8_INCLUDE_DIR "default value" CACHE PATH "include folder for RTQL8")
set(RTQL8_LIBRARY_DIR "default value" CACHE PATH "library folder for RTQL8")

set(RTQL8_THIRD_PART_LIBRARY_DIR "default value" CACHE PATH "library folder for RTQL8")


###############################################
# Find important packages
FIND_PACKAGE(OpenGL REQUIRED)
IF (OPENGL_FOUND)
MESSAGE(STATUS "OPENGL FOUND")
#MESSAGE(${OPENGL_LIBRARIES})
ELSE (OPENGL_FOUND)
MESSAGE(STATUS "OPENGL NOT FOUND")
ENDIF ()

find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})


include_directories(${RTQL8_INCLUDE_DIR})
link_directories(${RTQL8_LIBRARY_DIR})
link_directories(${RTQL8_THIRD_PART_LIBRARY_DIR})


###############################################
# Generate the path header file
SET(PATH_HEADER_DIR ${PROJECT_SOURCE_DIR}/include/manipulability/ManipulabilityPaths.h)
message(STATUS "Generate the path header file to  ${PATH_HEADER_DIR}")
FILE( WRITE ${PATH_HEADER_DIR} "// This file is automatically generated from CMake\n")
FILE(APPEND ${PATH_HEADER_DIR} "#ifndef MANIPULABILITY_PATHS_H\n")
FILE(APPEND ${PATH_HEADER_DIR} "#define MANIPULABILITY_PATHS_H\n")
FILE(APPEND ${PATH_HEADER_DIR} "\n")
FILE(APPEND ${PATH_HEADER_DIR} 
    "#define RTQL8MANIPULABILITY_ROOT_PATH \"${CMAKE_SOURCE_DIR}/\"\n")
FILE(APPEND ${PATH_HEADER_DIR} 
    "#define RTQL8MANIPULABILITY_DATA_PATH \"${CMAKE_SOURCE_DIR}/data/\"\n")
FILE(APPEND ${PATH_HEADER_DIR} "\n")
FILE(APPEND ${PATH_HEADER_DIR} "#endif // ifndef MANIPULABILITY_PATHS_H\n")

###############################################

add_subdirectory (src/rtql8Manipulability/)
add_subdirectory (src/tests/)


